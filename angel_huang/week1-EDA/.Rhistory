knitr::opts_chunk$set(echo = TRUE)
df <- read.table(data/INIT_TEST_FILE.csv,
header = T)
df <- read.table(data/INIT_TEST_FILE.csv,
header = T)
df <- read.table("data/INIT_TEST_FILE.csv",
header = T)
df <- read.table("../../data/INIT_TEST_FILE.csv",
header = T)
df <- read.table("../../data/INIT_TEST_FILE.csv")
df <- read.table("../../data/INIT_TEST_FILE.xlsx")
summary(df)
install.packages(c("arm", "backports", "bayestestR", "BH", "brglm", "broom", "callr", "cli", "clipr", "coda", "covr", "deldir", "Deriv", "devtools", "doParallel", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "expm", "fansi", "fields", "foreach", "fs", "ggeffects", "ggplot2", "git2r", "glue", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "insight", "iterators", "jsonlite", "knitr", "later", "lifecycle", "lme4", "matrixStats", "MCMCpack", "merTools", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "parameters", "performance", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "processx", "promises", "ps", "pscl", "purrr", "quantreg", "R6", "raster", "Rcpp", "readr", "rematch2", "remotes", "reshape2", "rex", "rgdal", "rgeos", "rgl", "rlang", "RLRsim", "rmarkdown", "roxygen2", "rversions", "scales", "sf", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sn", "sp", "spData", "spdep", "stringi", "sys", "tibble", "tidyr", "tidyselect", "tinytex", "units", "usethis", "vctrs", "withr", "xfun", "xml2", "yaml"))
knitr::opts_chunk$set(echo = TRUE)
# Install EDA related libraries
library(tidyverse)
install.packages("tidyverse")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
# Install EDA related libraries
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(plyr)
library(dplyr) # for pipe
library(tidyr)
load("data.Rda")
knitr::opts_chunk$set(echo = TRUE)
# Install EDA related libraries
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(plyr)
library(dplyr) # for pipe
library(tidyr)
load("INIT_TEST_FILE.Rda")
str(df) # list of each variable
# Plot response variable
ggplot(data = df) +
geom_bar(mapping = aes(x = IS_RETAINED_DESC))
# Plot continuous variables against response variable IS_RETAINED_DESC
p1 = ggplot(data = df, mapping = aes(x = IS_RETAINED_DESC, y = CREDIT_HOURS_EARNED)) +
geom_boxplot()
p2 = ggplot(data = df, mapping = aes(x = IS_RETAINED_DESC, y = CREDIT_HOURS_ATT)) +
geom_boxplot()
# How different is credit_hours_earned vs. attempted, with regression lines
p3 = ggplot(df, aes(x=CREDIT_HOURS_ATT, y=CREDIT_HOURS_EARNED)) +
geom_point()+
geom_smooth(method=lm,fomular=CREDIT_HOURS_EARNED~CREDIT_HOURS_ATT)
grid.arrange(p1, p2, p3, nrow = 1) # arrange subplots (install gridExtra package)
# Plot categorical variables against response variable
ggplot(data = df) +
geom_count(mapping = aes(x = IS_RETAINED_DESC, y = CLASS_LEVEL_STUDENT))
df_SR = df[df$IS_RETAINED == 0 & df$CLASS_LEVEL_STUDENT == 'SR',]
ggplot(data = df_SR) +
geom_count(mapping = aes(x = STRM_DESC, y = FIRST_STRM_DESC))
count(df_SR, 'FIRST_STRM_DESC')
sum(3219+54+3+1)
# Subsample dataset to exclude senior data
df_noSR = df[df$CLASS_LEVEL_STUDENT != 'SR',]
df_noSR_plot = df_noSR %>%
group_by(MAJ_1_SCHOOL_NAME) %>%
summarise(not_retained = mean(1-IS_RETAINED))
df_noSR_plot
ggplot(df_noSR_plot,aes(x = MAJ_1_SCHOOL_NAME, y = not_retained*100)) +
geom_col() +
coord_cartesian(ylim=c(0,10)) + # has to use coord_cartesian, which doesn't filter on data like ylim does
theme(axis.text.x = element_text(angle =45))  # tilt x label
# Plot continuous variables against response variable IS_RETAINED_DESC
p1 = ggplot(data = df, mapping = aes(x = IS_RETAINED_DESC, y = CREDIT_HOURS_EARNED)) +
geom_boxplot()
p2 = ggplot(data = df, mapping = aes(x = IS_RETAINED_DESC, y = CREDIT_HOURS_ATT)) +
geom_boxplot()
# How different is credit_hours_earned vs. attempted, with regression lines
p3 = ggplot(df, aes(x=CREDIT_HOURS_ATT, y=CREDIT_HOURS_EARNED)) +
geom_point()+
geom_smooth(method=lm,fomular=CREDIT_HOURS_EARNED~CREDIT_HOURS_ATT)
grid.arrange(p1, p2, p3, nrow = 1) # arrange subplots (install gridExtra package)
# Subsample dataset to exclude senior data
df_noSR = df[df$CLASS_LEVEL_STUDENT != 'SR',]
df_noSR_plot = df_noSR %>%
group_by(MAJ_1_SCHOOL_NAME) %>%
summarise(not_retained = mean(1-IS_RETAINED))
df_noSR_plot
# Subsample dataset to exclude senior data
df_noSR = df[df$CLASS_LEVEL_STUDENT != 'SR',]
df_noSR_plot = df_noSR %>%
group_by(MAJ_1_SCHOOL_NAME) %>%
summarise(not_retained = mean(1-IS_RETAINED))
df_noSR_plot
ggplot(df_noSR_plot,aes(x = MAJ_1_SCHOOL_NAME, y = not_retained*100)) +
geom_col() +
coord_cartesian(ylim=c(0,10)) + # has to use coord_cartesian, which doesn't filter on data like ylim does
theme(axis.text.x = element_text(angle =45))  # tilt x label
# Plot categorical variables against response variable
ggplot(data = df) +
geom_count(mapping = aes(x = IS_RETAINED_DESC, y = CLASS_LEVEL_STUDENT))
df_SR = df[df$IS_RETAINED == 0 & df$CLASS_LEVEL_STUDENT == 'SR',]
ggplot(data = df_SR) +
geom_count(mapping = aes(x = STRM_DESC, y = FIRST_STRM_DESC))
count(df_SR, 'FIRST_STRM_DESC')
sum(3219+54+3+1)
# Subsample dataset to exclude senior data
df_noSR = df[df$CLASS_LEVEL_STUDENT != 'SR',]
df_noSR_plot = df_noSR %>%
group_by(MAJ_1_SCHOOL_NAME) %>%
summarise(not_retained = mean(1-IS_RETAINED))
df_noSR_plot
ggplot(df_noSR_plot,aes(x = MAJ_1_SCHOOL_NAME, y = not_retained*100)) +
geom_col() +
coord_cartesian(ylim=c(0,10)) + # has to use coord_cartesian, which doesn't filter on data like ylim does
theme(axis.text.x = element_text(angle =45))  # tilt x label
View(df_noSR_plot)
View(df_noSR)
View(df_noSR)
df_noSR = df[df$CLASS_LEVEL_STUDENT != 'SR',]
df_noSR = df[df$CLASS_LEVEL_STUDENT != 'SR',]
# Subsample dataset to exclude senior data
df_noSR = df[df$CLASS_LEVEL_STUDENT != 'SR',]
df_noSR_plot = df_noSR %>%
group_by(MAJ_1_SCHOOL_NAME) %>%
summarise(not_retained = mean(1-IS_RETAINED))
df_noSR_plot
View(df_noSR)
